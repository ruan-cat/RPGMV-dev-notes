# 参考资料
# https://vercel.com/guides/how-can-i-use-github-actions-with-vercel
# https://vercel.com/guides/how-to-alias-a-preview-deployment-using-the-cli

name: 自写的vercel部署工具
env:
  VERCEL_TOKEN: ${{ secrets.vercel_token }}
  # 根据 vercel-deploy-tool 部署配置来决定是否需要以下环境变量
  # VERCEL_ORG_ID: ${{ secrets.vercel_orgId }}
  # VERCEL_PROJECT_ID: ${{ secrets.vercel_projectId }}
  # https://turborepo.com/docs/crafting-your-repository/constructing-ci#enabling-remote-caching
  # https://vercel.com/docs/monorepos/remote-caching#use-remote-caching-from-external-ci/cd
  TURBO_TOKEN: ${{ secrets.vercel_token }}
  TURBO_TEAM: "ruancat-projects"

on:
  push:
    branches:
      - main

jobs:
  Deploy-Production:
    runs-on: ubuntu-latest
    steps:
      - name: 检出分支
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 安装pnpm
        uses: pnpm/action-setup@v4
        with:
          # 项目提供了packageManager，故我们不提供该配置
          # version: 9
          run_install: |
            - recursive: true
            - args: [--global, "vercel", "@dotenvx/dotenvx", "tsx", "turbo"]

      - name: 安装node
        uses: actions/setup-node@v4
        with:
          node-version: 20.15.1
          cache: pnpm

      - name: 检查版本
        run: |
          node -v
          pnpm -v
          vc -v

      - name: pnpm全局检查依赖包
        run: pnpm ls -g

      - name: turbo login 远程登录
        run: turbo login --token=${{env.TURBO_TOKEN}} --team=${{env.TURBO_TEAM}}

      - name: turbo link 链接远程项目
        run: turbo link --token=${{env.TURBO_TOKEN}} --scope=${{env.TURBO_TEAM}} --yes

      - name: 运行自写的vercel部署工具
        # https://dotenvx.com/docs/cis/github-actions#install-dotenvx
        run: |
          curl -sfS https://dotenvx.sh/install.sh | sh
          pnpm dotenvx run -- pnpm run deploy
