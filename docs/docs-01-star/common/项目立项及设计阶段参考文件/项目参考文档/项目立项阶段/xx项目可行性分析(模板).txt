1: 技术(考虑组员学习进度)
	使用easyx作为界面
	目前张三, 李四, 王五完成了easyx练习题
	铁蛋和二狗在学习easyx中
	
	使用文件流作为数据存储
	目前张三, 二狗, 中分完成了文件流练习题


2. 核心功能(功能的简要描述)
	蛇可以在地图中移动
	玩家可以输入方向来修改蛇
	蛇每隔一段时间自行移动一格
	撞墙会死
	吃到食物加长

3. 是否能实现(数据的完整设计+逻辑的思路描述)
	1. 数据的完整设计
		/*
			蛇: 
			s[i][0]表示第i节身体的x轴坐标
			s[i][1]表示第i节身体的y轴坐标
		*/
		int s[20*20][2] = {
			{x1,y1},
			{x2,y2},
			{x3,y3},
			{x4,y4}
		}
		
		
		//蛇的当前长度  默认为3 每吃到食物+1
		int len; 
		
		//蛇的方向  wasd表示上左下右
		char dir;  
		
		
		/*
			地图: 
			m[i][j]表示地图上(i,j)坐标点是什么东西
			0表示空地 1表示墙 2表示食物
		*/
		int m[20][20] = {
			{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
			{1,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
			{1,0,2,0,0,0,0,0,0,0,0,0,0,0,1},
			{1,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
			{1,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
			{1,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
			{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1}
		}
	
	
	
	2. 逻辑的思路描述(根据核心功能的描述 讲一下数据是怎么修改的)
		1. 蛇可以在地图中移动
			蛇头根据方向修改对应值 
				wasd分别修改s[0][0]或s[0][1]的值
			蛇身复制前一个蛇身的值 
				s[i] 复制 s[i-1]的值
			
			
		2. 玩家可以输入方向来修改蛇
			接收输入后修改dir的值
			
		3. 蛇每隔一段时间自行移动一格
			循环(){
				如果有输入{
					接收玩家输入
				}
				sleep();
				移动;
			}
			
		4. 撞墙会死
			......
		5. 吃到食物加长
			......